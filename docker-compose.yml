services:
  users: 
    build: 
      context: .
      dockerfile: ./apps/users/Dockerfile
      target: development
    command: npm run start:dev users
    env_file:
      - ./apps/users/.env
    depends_on:
      - mongodb-primary
      - auth
      - product
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'
  
  auth:
    build: 
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/.env
    depends_on:
      - mongodb-primary
      - rabbitmq
      - product
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3001:3001'
  
  product: 
    build: 
      context: .
      dockerfile: ./apps/product/Dockerfile
      target: development
    command: npm run start:dev product
    env_file:
      - ./apps/product/.env
    depends_on:
      - mongodb-primary
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3002:3002'
  
  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'
  
  mongodb-primary:
    image: mongo:7.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password123
    # volumes:
    #   - 'mongodb_master_data:/data/db'
    ports:
      - '27017:27017'


# volumes:
#   mongodb_master_data:
#     driver: local
# volumes:
#   mongodb_data:
#     driver: local